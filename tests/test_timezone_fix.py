#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤
"""

import pytz
from datetime import datetime, date, time
from config.settings import BOT_SETTINGS

def test_timezone_settings():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞:")
    print(f"–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {BOT_SETTINGS['TIMEZONE']}")
    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞: {BOT_SETTINGS['TIMEZONE_NAME']}")
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
    timezone = pytz.timezone(BOT_SETTINGS['TIMEZONE_NAME'])
    
    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC
    utc_now = datetime.now(pytz.UTC)
    print(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è UTC: {utc_now}")
    
    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ü–µ–ª–µ–≤–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
    local_now = utc_now.astimezone(timezone)
    print(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ {BOT_SETTINGS['TIMEZONE_NAME']}: {local_now}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É (–∏—Å–ø–æ–ª—å–∑—É–µ–º naive datetime)
    naive_now = datetime.now()
    offset = timezone.utcoffset(naive_now)
    print(f"–°–º–µ—â–µ–Ω–∏–µ –æ—Ç UTC: {offset}")
    
    print()

def test_event_scheduling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π"""
    print("üìÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π:")
    
    # –ü—Ä–∏–º–µ—Ä: —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 26.06.2025 –≤ 20:00
    training_date = date(2025, 6, 26)  # –ß–µ—Ç–≤–µ—Ä–≥
    training_time = time(20, 0)  # 20:00
    
    print(f"–î–∞—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {training_date}")
    print(f"–í—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {training_time}")
    
    # –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è (–∑–∞ –¥–µ–Ω—å –¥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ 17:00)
    event_creation_date = date(2025, 6, 25)  # –°—Ä–µ–¥–∞
    event_creation_time = time(17, 0)  # 17:00
    
    print(f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è: {event_creation_date}")
    print(f"–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è: {event_creation_time}")
    
    # –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (–∑–∞ 2 —á–∞—Å–∞ –¥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏)
    reminder_time = time(18, 0)  # 18:00
    print(f"–í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {reminder_time}")
    
    # –í—Ä–µ–º—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è (–ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏)
    cleanup_time = time(22, 0)  # 22:00
    print(f"–í—Ä–µ–º—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è: {cleanup_time}")
    
    print()

def test_next_training_day():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –¥–Ω—è"""
    print("üèê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –¥–Ω—è:")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ EventService
    def get_next_training_day(today: date) -> date:
        from datetime import timedelta
        weekday = today.weekday()
        if weekday < 3:  # –î–æ —á–µ—Ç–≤–µ—Ä–≥–∞
            delta_days = 3 - weekday
        elif weekday < 6:  # –î–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è
            delta_days = 6 - weekday
        else:  # –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –∏–ª–∏ –ø–æ–∑–∂–µ
            delta_days = 4  # –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–µ—Ç–≤–µ—Ä–≥–∞
        return today + timedelta(days=delta_days)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    test_dates = [
        date(2025, 6, 23),  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        date(2025, 6, 24),  # –í—Ç–æ—Ä–Ω–∏–∫
        date(2025, 6, 25),  # –°—Ä–µ–¥–∞
        date(2025, 6, 26),  # –ß–µ—Ç–≤–µ—Ä–≥
        date(2025, 6, 27),  # –ü—è—Ç–Ω–∏—Ü–∞
        date(2025, 6, 28),  # –°—É–±–±–æ—Ç–∞
        date(2025, 6, 29),  # –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
    ]
    
    weekday_names = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å']
    
    for test_date in test_dates:
        next_day = get_next_training_day(test_date)
        print(f"{test_date} ({weekday_names[test_date.weekday()]}) -> {next_day} ({weekday_names[next_day.weekday()]})")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤\n")
    
    test_timezone_settings()
    test_event_scheduling()
    test_next_training_day()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!") 