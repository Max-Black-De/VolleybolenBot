#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–æ—Ç–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from data.database import Database
from services.event_service import EventService
from services.notification_service import NotificationService
from services.chat_history_service import ChatHistoryService
from datetime import date, timedelta
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_integration():
    """–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–æ—Ç–∞...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    db = Database("test_integration.db")
    db.init_database()
    
    event_service = EventService(db)
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º NotificationService –¥–ª—è —Ç–µ—Å—Ç–æ–≤, —Ç–∞–∫ –∫–∞–∫ –Ω—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π –±–æ—Ç
    chat_history_service = ChatHistoryService(db)
    
    print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    
    # === –¢–ï–°–¢ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è ===
    print("\nüìÖ –¢–ï–°–¢ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è")
    
    tomorrow = date.today() + timedelta(days=1)
    event_id = event_service.create_event_on_date(tomorrow)
    
    event = event_service.get_event_by_id(event_id)
    if event:
        print(f"‚úÖ –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {event['name']}")
        print(f"   ID: {event['id']}")
        print(f"   –î–∞—Ç–∞: {event['date']}")
        print(f"   –õ–∏–º–∏—Ç: {event['max_participants']}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è")
        return
    
    # === –¢–ï–°–¢ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä—É–ø–ø ===
    print("\nüéØ –¢–ï–°–¢ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä—É–ø–ø")
    
    # –í–∫–ª—é—á–∞–µ–º –∑–∞–ø–∏—Å—å –≥—Ä—É–ø–ø–∞–º–∏
    db.set_bot_setting('group_registration_enabled', 'true')
    db.set_bot_setting('max_group_size', '3')
    
    enabled = db.is_group_registration_enabled()
    max_size = db.get_max_group_size()
    
    print(f"‚úÖ –ó–∞–ø–∏—Å—å –≥—Ä—É–ø–ø–∞–º–∏: {enabled}")
    print(f"‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {max_size}")
    
    # === –¢–ï–°–¢ 3: –ó–∞–ø–∏—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ===
    print("\nüë• –¢–ï–°–¢ 3: –ó–∞–ø–∏—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    participants = [
        (1001, 1, "user1", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤"),
        (1002, 2, "user2", "–ü–µ—Ç—Ä", "–ü–µ—Ç—Ä–æ–≤"),
        (1003, 3, "user3", "–°–µ—Ä–≥–µ–π", "–°–µ—Ä–≥–µ–µ–≤"),
        (1004, 1, "user4", "–ê–Ω–Ω–∞", "–ê–Ω–Ω–æ–≤–∞"),
        (1005, 2, "user5", "–ú–∞—Ä–∏—è", "–ú–∞—Ä–∏–µ–≤–∞"),
    ]
    
    for telegram_id, group_size, username, first_name, last_name in participants:
        result = event_service.join_event_with_group(
            event_id, telegram_id, group_size, username, first_name, last_name
        )
        status = "‚úÖ" if result['success'] else "‚ùå"
        print(f"{status} {first_name} (–≥—Ä—É–ø–ø–∞ {group_size}): {result['success']}")
    
    # === –¢–ï–°–¢ 4: –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ ===
    print("\nüí¨ –¢–ï–°–¢ 4: –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    test_user_id = 1001
    test_messages = [
        "–ü—Ä–∏–≤–µ—Ç!",
        "–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É",
        "–°–ø–∞—Å–∏–±–æ!"
    ]
    
    for message in test_messages:
        chat_history_service.save_user_message(test_user_id, message, event_id)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    bot_messages = [
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
        "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã",
        "–î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ!"
    ]
    
    for message in bot_messages:
        chat_history_service.save_bot_message(test_user_id, message, event_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    history = chat_history_service.get_recent_history(test_user_id, 24)
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(history)}")
    
    # === –¢–ï–°–¢ 5: –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ===
    print("\nüìã –¢–ï–°–¢ 5: –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    
    participants_list = event_service.get_participants_list(event_id, event)
    print("–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:")
    print(participants_list)
    
    # === –¢–ï–°–¢ 6: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è ===
    print("\n‚úÖ –¢–ï–°–¢ 6: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    confirmed_users = [1001, 1003, 1004]
    
    for user_id in confirmed_users:
        success = event_service.confirm_presence(event_id, user_id)
        status = "‚úÖ" if success else "‚ùå"
        print(f"{status} –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ {user_id}: {success}")
    
    # === –¢–ï–°–¢ 7: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø–∏—Å–∫–∞ ===
    print("\nüö™ –¢–ï–°–¢ 7: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø–∏—Å–∫–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–¥–∏–≤—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    unconfirmed = event_service.get_unconfirmed_participants(event_id)
    print(f"–ù–µ–ø–æ–¥—Ç–≤–µ—Ä–¥–∏–≤—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(unconfirmed)}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø–∏—Å–∫—É
    left_participants = event_service.auto_leave_unconfirmed(event_id)
    print(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø–∏—Å–∞–Ω–æ: {len(left_participants)}")
    
    # === –¢–ï–°–¢ 8: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ ===
    print("\n‚öôÔ∏è –¢–ï–°–¢ 8: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞")
    
    # –ò–∑–º–µ–Ω—è–µ–º –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    limit_result = event_service.change_participant_limit(event_id, 8)
    print(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞: {limit_result['success']}")
    
    if limit_result['success']:
        print(f"   –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤: {len(limit_result['moved_to_main'])}")
        print(f"   –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ —Ä–µ–∑–µ—Ä–≤: {len(limit_result['moved_to_reserve'])}")
    
    # === –¢–ï–°–¢ 9: –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ===
    print("\nüìä –¢–ï–°–¢ 9: –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    participants = db.get_event_participants(event_id)
    total_participants = len(participants)
    confirmed_participants = len([p for p in participants if p['status'] == 'confirmed'])
    reserve_participants = len([p for p in participants if p['status'] == 'reserve'])
    total_people = sum(p.get('group_size', 1) for p in participants)
    
    print(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_participants}")
    print(f"–û—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤: {confirmed_participants}")
    print(f"–†–µ–∑–µ—Ä–≤: {reserve_participants}")
    print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π: {total_people}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º
    group_stats = {}
    for p in participants:
        size = p.get('group_size', 1)
        group_stats[size] = group_stats.get(size, 0) + 1
    
    print("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≥—Ä—É–ø–ø–∞–º:")
    for size, count in sorted(group_stats.items()):
        print(f"  {size} —á–µ–ª–æ–≤–µ–∫: {count} –≥—Ä—É–ø–ø")
    
    # === –¢–ï–°–¢ 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ===
    print("\nüîß –¢–ï–°–¢ 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = {
        'group_registration_enabled': db.is_group_registration_enabled(),
        'max_group_size': db.get_max_group_size(),
    }
    
    for key, value in settings.items():
        print(f"‚úÖ {key}: {value}")
    
    print("\nüéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    test_integration() 