from telegram import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
import logging

def create_main_keyboard(is_joined: bool = False) -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    if is_joined:
        keyboard = [
            ["–ü–µ—Ä–µ–¥—É–º–∞–ª! –û—Ç–ø–∏—Å—ã–≤–∞—é—Å—å("],
            ["–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"]
        ]
    else:
        keyboard = [
            ["–ò–¥—É –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!"],
            ["–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"]
        ]
    
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def create_presence_confirmation_keyboard(event_id: int, telegram_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è"""
    keyboard = [
        [
            InlineKeyboardButton("–ò–¥—É", callback_data=f"confirm_presence_{event_id}_{telegram_id}"),
            InlineKeyboardButton("–ù–µ –∏–¥—É", callback_data=f"decline_presence_{event_id}_{telegram_id}")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_admin_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    keyboard = [
        ["üìÖ –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ", "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"],
        ["üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"],
        ["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "üìú –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞"],
        ["üîô –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def create_event_creation_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π"""
    keyboard = [
        ["üèê –ß–µ—Ç–≤–µ—Ä–≥ 20:00", "üèê –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 20:00"],
        ["üìÖ –î—Ä—É–≥–∞—è –¥–∞—Ç–∞", "üîô –ù–∞–∑–∞–¥"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def create_settings_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = [
        ["üë• –õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "‚è∞ –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"],
        ["üìÖ –î–Ω–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", "üéØ –ó–∞–ø–∏—Å—å –≥—Ä—É–ø–ø–∞–º–∏"],
        ["üîô –ù–∞–∑–∞–¥"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def create_participant_limit_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–∏–º–∏—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    keyboard = [
        ["üë• 4 —É—á–∞—Å—Ç–Ω–∏–∫–∞", "üë• 6 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "üë• 12 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"],
        ["üë• 18 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "üë• 24 —É—á–∞—Å—Ç–Ω–∏–∫–∞"],
        ["üîô –ù–∞–∑–∞–¥"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def create_group_size_keyboard(max_group_size: int = 3) -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã"""
    keyboard = []
    
    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: "1 —á–µ–ª–æ–≤–µ–∫"
    keyboard.append(["üë§ 1 —á–µ–ª–æ–≤–µ–∫"])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ +1, +2, +3 –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç max_group_size
    if max_group_size >= 2:
        keyboard.append(["üë• +1"])  # –¥–ª—è –∑–∞–ø–∏—Å–∏ 2 —á–µ–ª–æ–≤–µ–∫
    
    if max_group_size >= 3:
        keyboard.append(["üë• +2"])  # –¥–ª—è –∑–∞–ø–∏—Å–∏ 3 —á–µ–ª–æ–≤–µ–∫
    
    if max_group_size >= 4:
        keyboard.append(["üë• +3"])  # –¥–ª—è –∑–∞–ø–∏—Å–∏ 4 —á–µ–ª–æ–≤–µ–∫
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    keyboard.append(["üîô –û—Ç–º–µ–Ω–∞"])
    
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def create_group_leave_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –≥—Ä—É–ø–ø—ã"""
    keyboard = [
        ["üë§ –û—Ç–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ–≥–æ", "üë• –û—Ç–ø–∏—Å–∞—Ç—å –≤—Å–µ—Ö"],
        ["üîô –û—Ç–º–µ–Ω–∞"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def create_partial_leave_keyboard(group_size: int, max_group_size: int = 3) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —á–∞—Å—Ç–∏—á–Ω–æ–π –æ—Ç–ø–∏—Å–∫–∏ –≥—Ä—É–ø–ø—ã"""
    logger = logging.getLogger(__name__)
    
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ 1, 2, ... N —á–µ–ª–æ–≤–µ–∫ (–Ω–æ –Ω–µ –±–æ–ª—å—à–µ —Ä–∞–∑–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏ max_group_size)
    max_leave = min(group_size, max_group_size)
    for i in range(1, max_leave + 1):
        keyboard.append([
            InlineKeyboardButton(f"–û—Ç–ø–∏—Å–∞—Ç—å—Å—è {i} —á–µ–ª.", callback_data=f"leave_partial_{i}")
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –≤—Å–µ–π –≥—Ä—É–ø–ø—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ group_size > max_group_size
    if group_size > max_group_size:
        keyboard.append([
            InlineKeyboardButton("–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –≤—Å–µ–π –≥—Ä—É–ø–ø–æ–π", callback_data="leave_group_all")
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã - –ø—Ä–æ—Å—Ç–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard.append([InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    
    
    
    return InlineKeyboardMarkup(keyboard)

def create_leave_confirmation_keyboard(event_id: int, telegram_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø–∏—Å–∫–∏"""
    keyboard = [
        [
            InlineKeyboardButton("–î–∞! –û—Ç–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"confirm_leave_{event_id}_{telegram_id}"),
            InlineKeyboardButton("–í–µ—Ä–Ω—É—Å—å –Ω–∞ —Ç—Ä–µ–Ω—é", callback_data=f"cancel_leave_{event_id}_{telegram_id}")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

